#
# Makefile.mingw
#

#
# PATHS
#

GCOMPRIS_PLUGINS := 	.
GCOMPRIS_TOP :=		../..
GTK_TOP :=		/gtk
GLIB_TOP :=		/glib
GNUWIN32_TOP :=		/gnuwin32

##
## VARIABLE DEFINITIONS
##

# Compiler Options

CFLAGS =

DEFINES =

.SUFFIXES:
.SUFFIXES: .c .a

##
## INCLUDE  MAKEFILES
##

include $(GCOMPRIS_TOP)/global_win32.mak

##
## INCLUDE PATHS
##

INCLUDE_PATHS +=	-I$(GTK_TOP)/include \
			-I$(GTK_TOP)/include/gtk-2.0 \
			-I$(GLIB_TOP)/include/glib-2.0 \
			-I$(GTK_TOP)/include/pango-1.0 \
			-I$(GTK_TOP)/include/atk-1.0 \
			-I$(GLIB_TOP)/lib/glib-2.0/include \
			-I$(GTK_TOP)/lib/gtk-2.0/include \
			-I$(GTK_TOP)/include/atk-1.0 \
			-I$(GTK_TOP)/include/freetype2 \
			-I$(GNUWIN32_TOP)/include \
			-I$(GCOMPRIS_TOP) \
			-I$(GCOMPRIS_TOP)/src




LIB_PATHS =		-L$(GTK_TOP)/lib \
			-L$(GNUWIN32_TOP)/lib


##
## LIBRARIES
##

LIBS =			-lgtk-win32-2.0 \
			-lglib-2.0 \
			-lgdk-win32-2.0 \
			-lgobject-2.0 \
			-lgmodule-2.0 \
			-lgdk_pixbuf-2.0 \
			-lpango-1.0 \
			-latk-1.0 \
			-lpangowin32-1.0 \
			-lgdi32 -lgthread-2.0 \
			-lintl \
			-lws2_32

##
## RULES
##

##
## TARGET DEFINITIONS
##

.PHONY: all clean

all: libart_lgpl

install:

##
##  SOURCES, OBJECTS
##
LIBART_C_SRC = \
	art_affine.c \
	art_alphagamma.c \
	art_bpath.c \
	art_gray_svp.c \
	art_misc.c \
	art_pixbuf.c \
	art_rect.c \
	art_rect_svp.c \
	art_rect_uta.c \
	art_render.c \
	art_render_gradient.c \
	art_render_mask.c \
	art_render_svp.c \
	art_rgb.c \
	art_rgb_affine.c \
	art_rgb_affine_private.c \
	art_rgb_affine_private.h \
	art_rgb_bitmap_affine.c \
	art_rgb_pixbuf_affine.c \
	art_rgb_rgba_affine.c \
	art_rgb_a_affine.c \
	art_rgba.c \
	art_rgb_svp.c \
	art_svp.c \
	art_svp_intersect.c \
	art_svp_ops.c \
	art_svp_point.c \
	art_svp_render_aa.c \
	art_svp_vpath.c \
	art_svp_vpath_stroke.c \
	art_svp_wind.c \
	art_uta.c \
	art_uta_ops.c \
	art_uta_rect.c \
	art_uta_vpath.c \
	art_uta_svp.c \
	art_vpath.c \
	art_vpath_bpath.c \
	art_vpath_dash.c \
	art_vpath_svp.c	\

LIBART_OBJECTS = $(LIBART_C_SRC:%.c=%.o)


#
# BUILD staticlibrary
#

# How to make a C file
%.o: %.c
	$(CC) $(CFLAGS) $(INCLUDE_PATHS) $(DEFINES) -c $< -o $@

.c.o:
	$(CC) $(CFLAGS) $(DEFINES) $(INCLUDE_PATHS) -o $@.o -c $<
	$(CC) -shared $@.o $(LIB_PATHS) $(LIBS) $(DLL_LD_FLAGS) -o $@

libart_lgpl: \
		libart_lgpl.a

libart_lgpl.a: $(LIBART_OBJECTS)
	-rm -f libart_lgpl.a
	$(AR) cru libart_lgpl.a $(LIBART_OBJECTS)
	ranlib libart_lgpl.a

##
## CLEAN RULES
##

clean:
	rm -rf *.o
	rm -rf *.a
