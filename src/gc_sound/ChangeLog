2006-12-15  Yves Combe <yves@ycombe.net>

	gc_sound_append_child now accepts varargs for item properties.
	add destroy_after_play property to play and destroy and item.
	fix GcSoundPOlicy names (NONE -> POLICY_NONE)
		
	* configure.in_ALONE:
	* python/Makefile.am:
	* python/demo.py:
	* python/gc_sound.defs:
	* python/gc_sound.override:
	* src/Makefile.am:
	* src/gc-sound-channel.c: (gc_sound_channel_play),
	(root_destroyed):
	* src/gc-sound-channel.h:
	* src/gc-sound-item.c: (gc_sound_item_append_child),
	(gc_sound_item_signal_play_end), (gc_sound_item_init),
	(gc_sound_item_get_property), (gc_sound_item_set_property),
	(gc_sound_item_class_init):
	* src/gc-sound-item.h:
	* src/gc-sound-mixer-SDL.c: (gc_sound_mixer_sdl_destroy):
	* src/test_gc_sound.c: (main):

2006-12-12  Yves Combe <yves@ycombe.net>

	add demo.py little python demo.
	add g_object_ref in mixer_sdl_new (fix bug in destroy).
	get filename returns a copy of the string, not the pointer itself.
	reset channel number when a channel is destroyed.

	* python/demo.py:
	* python/gc_sound.override:
	* src/gc-sound-item.c: (gc_sound_item_set_filename),
	(gc_sound_item_get_filename), (gc_sound_item_class_init):
	* src/gc-sound-mixer-SDL.c:
	(gc_sound_mixer_sdl_open_audio), (reset_channel_number),
	(channel_destroyed), (gc_sound_mixer_sdl_init),
	(gc_sound_mixer_sdl_finalize), (gc_sound_mixer_sdl_destroy):
	* src/gc-sound-object.c:
	* src/test_gc_sound.c: (main):

2006-12-10  Yves Combe <yves@ycombe.net>

	fix errors in destroy (destroy loop).

	* src/gc-sound-channel.c: (root_destroyed),
	(gc_sound_channel_destroy), (gc_sound_channel_class_init):
	* src/gc-sound-channel.h:
	* src/gc-sound-mixer-SDL.c: (gc_sound_mixer_sdl_finalize),
	(gc_sound_mixer_sdl_destroy), (gc_sound_mixer_sdl_class_init):
	* src/gc-sound-mixer-SDL.h:
	* src/gc-sound-object.c: (gc_sound_object_class_init),
	(gc_sound_object_dispose), (parent_destroyed):
	* src/test_gc_sound.c: (main):

2006-12-09  Yves Combe <yves@ycombe.net>

	Python bindings:
	- change names from GCSound to GcSound, and names in SoundPolicy enum
	  (uses h2py and glib-mkenums)
	- add bindings for python.

	* INSTALL:
	* Makefile.am:
	* aclocal.m4:
	* compile:
	* configure.in:
	* depcomp:
	* install-sh:
	* missing:
	* python/Makefile.am:
	* python/gc_sound.defs:
	* python/gc_sound.override:
	* python/gc_sound_module.c: (initgc_sound):
	* src/Makefile.am:
	* src/gc-sound-channel.c: (gc_sound_channel_play_item),
	(gc_sound_channel_get_root), (gc_sound_channel_pause),
	(gc_sound_channel_resume), (gc_sound_channel_halt),
	(gc_sound_channel_get_policy), (gc_sound_channel_set_policy),
	(gc_sound_channel_play), (root_destroyed),
	(gc_sound_channel_destroy), (gc_sound_channel_init),
	(gc_sound_channel_get_property), (gc_sound_channel_set_property),
	(gc_sound_channel_signal_chunk_end), (gc_sound_channel_signal_run),
	(gc_sound_channel_class_init):
	* src/gc-sound-channel.h:
	* src/gc-sound-item.c: (gc_sound_item_run_next),
	(gc_sound_item_set_loop), (gc_sound_item_get_policy),
	(gc_sound_item_set_policy), (gc_sound_item_child_start),
	(gc_sound_item_child_end), (gc_sound_item_child_destroyed),
	(gc_sound_item_append_child), (gc_sound_item_play),
	(gc_sound_item_set_filename), (gc_sound_item_get_filename),
	(gc_sound_item_signal_real_play), (gc_sound_item_signal_play_end),
	(gc_sound_item_signal_play_start),
	(gc_sound_item_signal_chunk_end),
	(gc_sound_item_signal_chunk_start), (gc_sound_item_init),
	(gc_sound_item_get_property), (gc_sound_item_set_property),
	(gc_sound_item_class_init)	* src/gc-sound-item.h:
	* src/gc-sound-mixer-SDL.c: (gc_sound_mixer_sdl_new),
	(gc_sound_mixer_sdl_open_audio), (gc_sound_mixer_sdl_close_audio),
	(reset_channel_number), (channel_destroyed),
	(gc_sound_mixer_sdl_new_channel), (gc_sound_mixer_sdl_pause),
	(gc_sound_mixer_sdl_resume), (gc_sound_mixer_sdl_halt),
	(gc_sound_mixer_sdl_pause_channel),
	(gc_sound_mixer_sdl_resume_channel),
	(gc_sound_mixer_sdl_halt_channel), (gc_sound_mixer_sdl_play_item),
	(channel_finished_cb), (gc_sound_mixer_sdl_channel_finished),
	(gc_sound_mixer_sdl_init), (gc_sound_mixer_sdl_finalize),
	(gc_sound_mixer_sdl_destroy), (gc_sound_mixer_sdl_get_property),
	(gc_sound_mixer_sdl_set_property), (gc_sound_mixer_sdl_class_init),
	(gc_init_sound_mixer):
	* src/gc-sound-mixer-SDL.h:
	* src/gc-sound-mixer-private.h:
	* src/gc-sound-mixer.c: (gc_sound_mixer_open_audio),
	(gc_sound_mixer_close_audio), (gc_sound_mixer_new_channel),
	(gc_sound_mixer_pause), (gc_sound_mixer_resume),
	(gc_sound_mixer_halt), (gc_sound_mixer_pause_channel),
	(gc_sound_mixer_resume_channel), (gc_sound_mixer_halt_channel),
	(gc_sound_mixer_play_item), (gc_sound_mixer_get_type):
	* src/gc-sound-mixer.h:
	* src/gc-sound-object.c: (gc_sound_object_get_type),
	(gc_sound_object_base_class_init),
	(gc_sound_object_base_class_finalize),
	(gc_sound_object_class_init), (gc_sound_object_init),
	(gc_sound_object_destroy), (gc_sound_object_dispose),
	(gc_sound_object_real_destroy), (gc_sound_object_finalize),
	(parent_destroyed):
	* src/gc-sound-object.h:
	* src/gc-sound.h:
	* src/test_gc_sound.c: (finish), (start), (main):

2006-12-08  Yves Combe <yves@ycombe.net>

	Work on destroy recursive on mixer-SDL/channel/item
	TODO: 
	-  fix if channel is destroyed before mixer, 
	   an error occurs when mixer is destroyed?
	- python bindings
	
	* src/gc-sound-channel.c: (gc_sound_channel_play_item),
	(gc_sound_channel_pause), (gc_sound_channel_resume),
	(gc_sound_channel_halt), (gc_sound_channel_play), (root_destroyed),
	(gc_sound_channel_destroy), (gc_sound_channel_init),
	(gc_sound_channel_get_property), (gc_sound_channel_set_property),
	(gc_sound_channel_signal_chunk_end), (gc_sound_channel_signal_run),
	(gc_sound_channel_class_init):
	* src/gc-sound-channel.h:
	* src/gc-sound-item.c: (gc_sound_item_run_next),
	(gc_sound_item_child_destroyed), (gc_sound_item_append_child),
	(gc_sound_item_signal_real_play), (gc_sound_item_signal_play_end),
	(gc_sound_item_signal_play_start),
	(gc_sound_item_signal_chunk_end),
	(gc_sound_item_signal_chunk_start), (gc_sound_item_init),
	(gc_sound_item_get_property), (gc_sound_item_set_property),
	(gc_sound_item_class_init):
	* src/gc-sound-item.h:
	* src/gc-sound-mixer-SDL.c: (gc_sound_mixer_SDL_open_audio),
	(reset_channel_number), (channel_destroyed),
	(gc_sound_mixer_SDL_new_channel),
	(gc_sound_mixer_SDL_pause_channel),
	(gc_sound_mixer_SDL_resume_channel),
	(gc_sound_mixer_SDL_halt_channel), (gc_sound_mixer_SDL_play_item),
	(channel_finished_cb), (gc_sound_mixer_SDL_channel_finished),
	(gc_sound_mixer_SDL_init), (gc_sound_mixer_SDL_finalize),
	(gc_sound_mixer_SDL_destroy), (gc_sound_mixer_SDL_class_init),
	(gc_init_sound_mixer):
	* src/gc-sound-mixer-SDL.h:
	* src/gc-sound-object.c: (gc_sound_object_class_init),
	(gc_sound_object_init), (gc_sound_object_destroy),
	(parent_destroyed), (gc_sound_object_set_property),
	(gc_sound_object_get_property):
	* src/gc-sound-object.h:
	* src/test_gc_sound.c: (finish), (start), (main):

2006-12-01  Yves Combe <yves@ycombe.net>

	Add GCSoundObject to have a base class with destroy signal/functions.
	Idea (and some code) from GtkObject.
	GCSOundMixerSDL, GCSoundChannel and GCSoundItem now use it.

	* src/Makefile.am:
	* src/gc-sound-channel.h:
	* src/gc-sound-item.h:
	* src/gc-sound-mixer-SDL.c: (gc_sound_mixer_SDL_init),
	(gc_init_sound_mixer):
	* src/gc-sound-mixer-SDL.h:
	* src/gc-sound-object.c: (gc_sound_object_get_type),
	(gc_sound_object_base_class_init),
	(gc_sound_object_base_class_finalize),
	(gc_sound_object_class_init), (gc_sound_object_init),
	(gc_sound_object_destroy), (gc_sound_object_dispose),
	(gc_sound_object_real_destroy), (gc_sound_object_finalize),
	(gc_sound_object_set_property), (gc_sound_object_get_property):
	* src/gc-sound-object.h:

2006-11-29  Yves Combe <yves@ycombe.net>

	Rewrite gc_sound without gob (in C).
	Architecture change:
	- GCSoundMixer is an interface. GCSoundMixerSDL just implement it. 
	That to allow change libsdl dependencie to gstreamer when needed.
	- GCSoundChannel and GCSoundItem just uses GCSoundMixer interface to run.

	TODO:
	- object_ref is not correct.
	- python binding.
	- add a record capability in interface (for now SDL_mixer can not do it).
	- future way. add a gstreamer implementation of interface.	
	
	* aclocal.m4:
	* configure.in:
	* src/Makefile.am:
	* src/gc-sound-channel.c: (gc_sound_channel_play_item),
	(gc_sound_channel_get_root), (gc_sound_channel_pause),
	(gc_sound_channel_resume), (gc_sound_channel_halt),
	(gc_sound_channel_get_policy), (gc_sound_channel_set_policy),
	(gc_sound_channel_play), (gc_sound_channel_init),
	(gc_sound_channel_get_property), (gc_sound_channel_set_property),
	(gc_sound_channel_signal_chunk_end), (gc_sound_channel_signal_run),
	(gc_sound_channel_class_init):
	* src/gc-sound-channel.gob:
	* src/gc-sound-channel.h:
	* src/gc-sound-item.c: (gc_sound_item_run_next),
	(gc_sound_item_set_loop), (gc_sound_item_get_policy),
	(gc_sound_item_set_policy), (gc_sound_item_child_start),
	(gc_sound_item_child_end), (gc_sound_item_append_child),
	(gc_sound_item_play), (gc_sound_item_set_filename),
	(gc_sound_item_get_filename), (gc_sound_item_signal_real_play),
	(gc_sound_item_signal_play_end), (gc_sound_item_signal_play_start),
	(gc_sound_item_signal_chunk_end),
	(gc_sound_item_signal_chunk_start), (gc_sound_item_init),
	(gc_sound_item_get_property), (gc_sound_item_set_property),
	(gc_sound_item_class_init):
	* src/gc-sound-item.gob:
	* src/gc-sound-item.h:
	* src/gc-sound-marshallers.c:
	* src/gc-sound-marshallers.h:
	* src/gc-sound-mixer-SDL.c: (gc_sound_mixer_SDL_new),
	(gc_sound_mixer_SDL_open_audio), (gc_sound_mixer_SDL_close_audio),
	(gc_sound_mixer_SDL_new_channel), (gc_sound_mixer_SDL_pause),
	(gc_sound_mixer_SDL_resume), (gc_sound_mixer_SDL_halt),
	(gc_sound_mixer_SDL_pause_channel),
	(gc_sound_mixer_SDL_resume_channel),
	(gc_sound_mixer_SDL_halt_channel), (gc_sound_mixer_SDL_play_item),
	(channel_finished_cb), (gc_sound_mixer_SDL_channel_finished),
	(gc_sound_mixer_SDL_init), (gc_sound_mixer_SDL_finalize),
	(gc_sound_mixer_SDL_get_property),
	(gc_sound_mixer_SDL_set_property), (gc_sound_mixer_SDL_class_init),
	(gc_init_sound_mixer):
	* src/gc-sound-mixer-SDL.h:
	* src/gc-sound-mixer-private.h:
	* src/gc-sound-mixer.c: (gc_sound_mixer_open_audio),
	(gc_sound_mixer_close_audio), (gc_sound_mixer_new_channel),
	(gc_sound_mixer_pause), (gc_sound_mixer_resume),
	(gc_sound_mixer_halt), (gc_sound_mixer_pause_channel),
	(gc_sound_mixer_resume_channel), (gc_sound_mixer_halt_channel),
	(gc_sound_mixer_play_item), (gc_sound_mixer_get_type),
	(_gc_sound_mixer_install_property), (gc_sound_mixer_iface_init):
	* src/gc-sound-mixer.gob:
	* src/gc-sound-mixer.h:
	* src/gc-sound.h:
	* src/marshallers.list:
	* src/test_gc_sound.c: (main):

2006-11-16  Yves Combe <yves@ycombe.net>

	Added sound policy (play only if iddle, after current, or interrupt and play).
        Seems works !

	* src/gc-sound-channel.gob:
	* src/gc-sound-item.gob:
	* src/gc-sound-mixer.gob:
	* src/test_gc_sound.c: (finish), (main):

2006-11-15  Yves Combe <yves@ycombe.net>

	Play loop of items/group.
	Mute items/groups.

	* src/gc-sound-channel.gob:
	* src/gc-sound-item.gob:
	* src/test_gc_sound.c: (main):

2006-11-14  Yves Combe <yves@ycombe.net>

	Play music with groups of sound items.

	* src/gc-sound-channel.gob:
	* src/gc-sound-item.gob:
	* src/gc-sound-mixer.gob:
	* src/test_gc_sound.c: (finish), (start), (main):

2006-11-14  Yves Combe <yves@ycombe.net>

	initial import of gc_sound objects library. Works, without grouping.

	* COPYING:
	* INSTALL:
	* Makefile.am:
	* aclocal.m4:
	* compile:
	* config.guess:
	* config.sub:
	* configure.in:
	* install-sh:
	* ltmain.sh:
	* missing:
	* src/Makefile.am:
	* src/gc-sound-channel.gob:
	* src/gc-sound-item.gob:
	* src/gc-sound-mixer.gob:
	* src/gc-sound.h:
	* src/test_gc_sound.c: (finish), (main):

