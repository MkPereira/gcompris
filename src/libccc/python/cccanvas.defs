;; -*- scheme -*-
; object definitions ...
(define-interface Brush
  (in-module "Cc")
  (c-name "CcBrush")
  (gtype-id "CC_TYPE_BRUSH")
)

(define-object Gradient
  (in-module "Cc")
  (parent "GObject")
  (c-name "CcGradient")
  (gtype-id "CC_TYPE_GRADIENT")
  (implements "CcBrush")
)

(define-object RadialGradient
  (in-module "Cc")
  (parent "GObject")
  (c-name "CcRadialGradient")
  (gtype-id "CC_TYPE_RADIAL_GRADIENT")
  (implements "CcBrush")
  )

(define-object LinearGradient
  (in-module "Cc")
  (parent "GObject")
  (c-name "CcLinearGradient")
  (gtype-id "CC_TYPE_LINEAR_GRADIENT")
  (implements "CcBrush")
  )

(define-object Color
  (in-module "Cc")
  (parent "GObject")
  (c-name "CcColor")
  (gtype-id "CC_TYPE_COLOR")
  (implements "CcBrush")
)

(define-object ColorRgb
  (in-module "Cc")
  (parent "CcColor")
  (c-name "CcColorRgb")
  (gtype-id "CC_TYPE_COLOR_RGB")
)

(define-object ColorHsv
  (in-module "Cc")
  (parent "CcColor")
  (c-name "CcColorHsv")
  (gtype-id "CC_TYPE_COLOR_HSV")
)

(define-object Item
  (in-module "Cc")
  (parent "GObject")
  (c-name "CcItem")
  (gtype-id "CC_TYPE_ITEM")
  (implements "CcItemView")
)

(define-interface ItemView
  (in-module "Cc")
  (c-name "CcItemView")
  (gtype-id "CC_TYPE_ITEM_VIEW")
)

(define-interface View
  (in-module "Cc")
  (c-name "CcView")
  (gtype-id "CC_TYPE_VIEW")
)

(define-object Pixbuf
  (in-module "Cc")
  (parent "CcItem")
  (c-name "CcPixbuf")
  (gtype-id "CC_TYPE_PIXBUF")
)


(define-object Printer
  (in-module "Cc")
  (parent "GObject")
  (c-name "CcPrinter")
  (gtype-id "CC_TYPE_PRINTER")
  (implements "CcItemView")
  (implements "CcView")
)

(define-object Shape
  (in-module "Cc")
  (parent "CcItem")
  (c-name "CcShape")
  (gtype-id "CC_TYPE_SHAPE")
)

(define-object Rectangle
  (in-module "Cc")
  (parent "CcShape")
  (c-name "CcRectangle")
  (gtype-id "CC_TYPE_RECTANGLE")
)

(define-object RoundedRectangle
  (in-module "Cc")
  (parent "CcRectangle")
  (c-name "CcRoundedRectangle")
  (gtype-id "CC_TYPE_ROUNDED_RECTANGLE")
)

(define-object Line
  (in-module "Cc")
  (parent "CcShape")
  (c-name "CcLine")
  (gtype-id "CC_TYPE_LINE")
)

(define-object Circle
  (in-module "Cc")
  (parent "CcShape")
  (c-name "CcCircle")
  (gtype-id "CC_TYPE_CIRCLE")
)

(define-object Text
  (in-module "Cc")
  (parent "CcShape")
  (c-name "CcText")
  (gtype-id "CC_TYPE_TEXT")
)

(define-object ViewCellRenderer
  (in-module "Cc")
  (parent "GtkCellRenderer")
  (c-name "CcViewCellRenderer")
  (gtype-id "CC_TYPE_VIEW_CELL_RENDERER")
  (implements "CcItemView")
  (implements "CcView")
)

(define-object ViewPNG
  (in-module "Cc")
  (parent "GObject")
  (c-name "CcViewPNG")
  (gtype-id "CC_TYPE_VIEW_PNG")
  (implements "CcItemView")
  (implements "CcView")
)

(define-object ViewWidget
  (in-module "Cc")
  (parent "GtkDrawingArea")
  (c-name "CcViewWidget")
  (gtype-id "CC_TYPE_VIEW_WIDGET")
  (implements "CcItemView")
  (implements "CcView")
)

(define-object Caret
  (in-module "Cc")
  (parent "CcLine")
  (c-name "CcCaret")
  (gtype-id "CC_TYPE_CARET")
)

(define-object Camera
  (in-module "Cc")
  (parent "CcItem")
  (c-name "CcCamera")
  (gtype-id "CC_TYPE_CAMERA")
  (implements "CcItemView")
  (implements "CcView")
)

;; Enumerations and flags ...

(define-flags ItemFlags
  (in-module "Cc")
  (c-name "CcItemFlags")
  (gtype-id "CC_TYPE_ITEM_FLAGS")
  (values
    '("can-focus" "CC_CAN_FOCUS")
    '("disposed" "CC_DISPOSED")
    '("grid-aligned" "CC_GRID_ALIGNED")
  )
)

(define-enum Unit
  (in-module "Cc")
  (c-name "CcUnit")
  (gtype-id "CC_TYPE_UNIT")
  (values
    '("display-pixel" "CC_UNIT_DISPLAY_PIXEL")
    '("point" "CC_UNIT_POINT")
    '("pt" "CC_UNIT_PT")
  )
)

(define-enum ZoomMode
  (in-module "Cc")
  (c-name "CcZoomMode")
  (gtype-id "CC_TYPE_ZOOM_MODE")
  (values
    '("pixels" "CC_ZOOM_PIXELS")
    '("width" "CC_ZOOM_WIDTH")
    '("height" "CC_ZOOM_HEIGHT")
    '("auto" "CC_ZOOM_AUTO")
  )
)


;; From ../ccc/cc-brush-color.h

(define-function brush_color_new
  (in-module "Cc")
  (c-name "cc_brush_color_new")
  (is-constructor-of "CcBrushColor")
  (return-type "CcBrush*")
  (properties
    '("color" (argname "color") (optional))
  )
)

(define-method get_color
  (of-object "CcBrushColor")
  (c-name "cc_brush_color_get_color")
  (return-type "CcColor*")
)

(define-method set_color
  (of-object "CcBrushColor")
  (c-name "cc_brush_color_set_color")
  (return-type "none")
  (parameters
    '("CcColor*" "color")
  )
)


;; From ../ccc/cc-camera.h

(define-function camera_new
  (in-module "Cc")
  (c-name "cc_camera_new")
  (is-constructor-of "CcCamera")
  (return-type "CcItem*")
)

(define-function camera_new_root
  (in-module "Cc")
  (c-name "cc_camera_new_root")
  (return-type "CcItem*")
  (parameters
    '("CcItem*" "root")
  )
  (caller-owns-return #t)
)

(define-method set_root
  (of-object "CcCamera")
  (c-name "cc_camera_set_root")
  (return-type "none")
  (parameters
    '("CcItem*" "root")
  )
)

(define-method get_root
  (of-object "CcCamera")
  (c-name "cc_camera_get_root")
  (return-type "CcItem*")
)

;; From ../ccc/cc-caret.h

(define-function caret_new
  (c-name "cc_caret_new")
  (is-constructor-of "CcCaret")
  (return-type "CcItem*")
)

(define-method set_position
  (of-object "CcCaret")
  (c-name "cc_caret_set_position")
  (return-type "none")
  (parameters
    '("gdouble" "x1")
    '("gdouble" "y1")
    '("gdouble" "x2")
    '("gdouble" "y2")
  )
)

;; From ../ccc/ccc.h



;; From ../ccc/cc-circle.h

(define-function circle_new
  (in-module "Cc")
  (c-name "cc_circle_new")
  (is-constructor-of "CcCircle")
  (return-type "CcItem*")
)

(define-method set_anchor
  (of-object "CcCircle")
  (c-name "cc_circle_set_anchor")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-method set_radius
  (of-object "CcCircle")
  (c-name "cc_circle_set_radius")
  (return-type "none")
  (parameters
    '("gdouble" "radius")
  )
)



;; From ../ccc/cc-color.h

(define-function color_new_rgba
  (in-module "Cc")
  (c-name "cc_color_new_rgba")
  (is-constructor-of "CcColorRgb")
  (return-type "CcColor*")
  (properties
    '("red" (argname "red"))
    '("green" (argname "green"))
    '("blue" (argname "blue"))
    '("alpha" (argname "alpha"))
  )
)

(define-function color_new_hsva
  (in-module "Cc")
  (c-name "cc_color_new_hsva")
  (is-constructor-of "CcColorHsv")
  (return-type "CcColor*")
  (properties
    '("hue" (argname "hue"))
    '("saturation" (argname "saturation"))
    '("value" (argname "value"))
    '("alpha" (argname "alpha"))
  )
)

;; From ../ccc/cc-unit.h

(define-enum Unit
  (in-module "Cc")
  (c-name "CcUnit")
  (gtype-id "CC_TYPE_UNIT")
  (values
    '("display-pixel" "CC_UNIT_DISPLAY_PIXEL")
    '("point" "CC_UNIT_POINT")
    '("pt" "CC_UNIT_PT")
  )
)


(define-boxed Distance
  (in-module "Cc")
  (c-name "CcDistance")
  (gtype-id "CC_TYPE_DISTANCE")
  (release-func cc_distance_free)
  (fields
    '("gdouble" "value")
    '("CcUnit" "unit")
  )
 )

(define-function cc_distance_new
  (c-name "cc_distance_new")
  (is-constructor-of "CcDistance")
  (return-type "CcDistance*")
  (parameters
    '("gdouble" "value")
    '("CcUnit" "unit")
  )
)

(define-method copy
  (of-object "CcDistance")
  (c-name "cc_distance_copy")
  (return-type "CcDistance*")
)

;; From ../ccc/cc-d-rect.h

(define-boxed DRect
  (in-module "Cc")
  (c-name "CcDRect")
  (gtype-id "CC_TYPE_D_RECT")
  (release-func g_free)
  (fields
    '("gdouble" "x1")
    '("gdouble" "y1")
    '("gdouble" "x2")
    '("gdouble" "y2")
  )
 )

(define-function d_rect_new
  (c-name "cc_d_rect_new")
  (is-constructor-of "CcDRect")
  (caller-owns-return #f)
  (return-type "CCDRect")
  (parameters
    '("gdouble" "x1")
    '("gdouble" "x2")
    '("gdouble" "y1")
    '("gdouble" "y2")
    )
  )

(define-method copy
  (of-object "CcDRect")
  (c-name "cc_d_rect_copy")
  (return-type "CcDRect*")
)

(define-method equal
  (of-object "CcDRect")
  (c-name "cc_d_rect_equal")
  (return-type "gboolean")
  (parameters
    '("CcDRect" "two")
  )
)

(define-method intersect
  (of-object "CcDRect")
  (c-name "cc_d_rect_intersect")
  (return-type "gboolean")
  (parameters
    '("CcDRect" "two")
  )
)

(define-method union
  (of-object "CcDRect")
  (c-name "cc_d_rect_union")
  (return-type "none")
  (parameters
    '("CcDRect" "two")
    '("CcDRect*" "merged")
  )
)

(define-method get_as_tuple
  (of-object "CcDRect")
  (c-name "cc_d_rect_get_as_tuple")
  (return-type "gint")
  )

;; From ../ccc/cc-enumerations.h

;; From ../ccc/cc-gradient.h

(define-method add_stop
  (of-object "CcGradient")
  (c-name "cc_gradient_add_stop")
  (return-type "none")
  (parameters
    '("gdouble" "offset")
    '("CcColor*" "color")
  )
)

;; From ../ccc/cc-item.h

(define-method SET_FLAGS
  (of-object "CcItem")
  (c-name "CC_ITEM_SET_FLAGS")
  (return-type "none")
  (parameters
    '("CcItemFlags" "flags")
  )
)

(define-function item_new
  (c-name "cc_item_new")
  (is-constructor-of "CcItem")
  (return-type "CcItem*")
)

(define-method append
  (of-object "CcItem")
  (c-name "cc_item_append")
  (return-type "none")
  (parameters
    '("CcItem*" "child")
  )
)

;; will be in override
(define-method set
  (of-object "CcItem")
  (c-name "cc_item_set")
  (return-type "none")
)

(define-method bounds_changed
  (of-object "CcItem")
  (c-name "cc_item_bounds_changed")
  (return-type "none")
  (parameters
    '("CcView*" "view")
  )
)

(define-method dirty
  (of-object "CcItem")
  (c-name "cc_item_dirty")
  (return-type "none")
  (parameters
    '("CcView*" "view")
    '("CcDRect" "dirty_region")
  )
)

(define-method distance
  (of-object "CcItem")
  (c-name "cc_item_distance")
  (return-type "gdouble")
  (parameters
    '("CcView*" "view")
    '("gdouble" "x")
    '("gdouble" "y")
    '("CcItem**" "found")
  )
)

(define-method foreach_view
  (of-object "CcItem")
  (c-name "cc_item_foreach_view")
  (return-type "none")
  (parameters
    '("CcItemFunc" "func")
    '("gpointer" "data")
  )
)

(define-method grab_focus
  (of-object "CcItem")
  (c-name "cc_item_grab_focus")
  (return-type "none")
  (parameters
    '("CcView*" "view")
  )
)

(define-method insert
  (of-object "CcItem")
  (c-name "cc_item_insert")
  (return-type "none")
  (parameters
    '("CcItem*" "child")
    '("gint" "position")
  )
)

(define-method is_child_of
  (of-object "CcItem")
  (c-name "cc_item_is_child_of")
  (return-type "gboolean")
  (parameters
    '("CcItem*" "parent")
  )
)

(define-method remove
  (of-object "CcItem")
  (c-name "cc_item_remove")
  (return-type "none")
  (parameters
    '("CcItem*" "child")
  )
)

(define-method render
  (of-object "CcItem")
  (c-name "cc_item_render")
  (return-type "none")
  (parameters
    '("CcView*" "view")
    '("cairo_t*" "cr")
  )
)

(define-method set_grid_aligned
  (of-object "CcItem")
  (c-name "cc_item_set_grid_aligned")
  (return-type "none")
  (parameters
    '("gboolean" "grid_aligned")
  )
)

(define-method update_bounds
  (of-object "CcItem")
  (c-name "cc_item_update_bounds")
  (return-type "none")
  (parameters
    '("gpointer" "data")
  )
)

(define-method update_bounds_for_view
  (of-object "CcItem")
  (c-name "cc_item_update_bounds_for_view")
  (return-type "none")
  (parameters
    '("CcView*" "view")
  )
)

(define-method add_view
  (of-object "CcItem")
  (c-name "cc_item_add_view")
  (return-type "none")
  (parameters
    '("CcView*" "view")
  )
)

(define-method remove_view
  (of-object "CcItem")
  (c-name "cc_item_remove_view")
  (return-type "none")
  (parameters
    '("CcView*" "view")
  )
)

(define-method set_position
  (of-object "CcItem")
  (c-name "cc_item_set_position")
  (return-type "none")
  (parameters
    '("CcItem*" "parent")
    '("gint" "position")
  )
)

(define-method raise_to_top
  (of-object "CcItem")
  (c-name "cc_item_raise_to_top")
  (return-type "none")
  (parameters
    '("CcItem*" "parent")
  )
)

(define-method raise
  (of-object "CcItem")
  (c-name "cc_item_raise")
  (return-type "none")
  (parameters
    '("CcItem*" "parent")
  )
)

(define-method lower
  (of-object "CcItem")
  (c-name "cc_item_lower")
  (return-type "none")
  (parameters
    '("CcItem*" "parent")
  )
)

(define-method lower_to_bottom
  (of-object "CcItem")
  (c-name "cc_item_lower_to_bottom")
  (return-type "none")
  (parameters
    '("CcItem*" "parent")
  )
)

(define-method get_all_bounds
  (of-object "CcItem")
  (c-name "cc_item_get_all_bounds")
  (return-type "CcDRect const*")
  (parameters
   '("CcView*" "view")
   )
  )


;; From ../ccc/cc-item-view.h

(define-method register
  (of-object "CcItemView")
  (c-name "cc_item_view_register")
  (return-type "none")
  (parameters
    '("CcItem*" "item")
  )
)

(define-method unregister
  (of-object "CcItemView")
  (c-name "cc_item_view_unregister")
  (return-type "none")
  (parameters
    '("CcItem*" "item")
  )
)



;; From ../ccc/cc-linear-gradient.h

(define-function linear_gradient_new
  (in-module "Cc")
  (c-name "cc_linear_gradient_new")
  (is-constructor-of "CcLinearGradient")
  (return-type "CcBrush*")
  (properties
    '("x1" (argname "x1"))
    '("y1" (argname "y1"))
    '("x2" (argname "x2"))
    '("y2" (argname "y2"))
  )
)

;; From ../ccc/cc-line.h

(define-function line_new
  (c-name "cc_line_new")
  (is-constructor-of "CcLine")
  (return-type "CcItem*")
)

(define-method clear
  (of-object "CcLine")
  (c-name "cc_line_clear")
  (return-type "none")
)

(define-method line
  (of-object "CcLine")
  (c-name "cc_line_line")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-method move
  (of-object "CcLine")
  (c-name "cc_line_move")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-method get_num_data
  (of-object "CcLine")
  (c-name "cc_line_get_num_data")
  (return-type "guint")
)

(define-method data_set_position
  (of-object "CcLine")
  (c-name "cc_line_data_set_position")
  (return-type "none")
  (parameters
    '("guint" "index")
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-method data_get_position
  (of-object "CcLine")
  (c-name "cc_line_data_get_position")
  (return-type "none")
  (parameters
    '("guint" "index")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)


;; From ../ccc/cc-marshallers.h



;; From ../ccc/cc-pixbuf.h

(define-function pixbuf_new
  (in-module "Cc")
  (c-name "cc_pixbuf_new")
  (is-constructor-of "CcPixbuf")
  (return-type "CcItem*")
)

(define-method set_pixbuf
  (of-object "CcPixbuf")
  (c-name "cc_pixbuf_set_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method set_position
  (of-object "CcPixbuf")
  (c-name "cc_pixbuf_set_position")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
    '("gdouble" "w")
    '("gdouble" "h")
  )
)

(define-method set_position_x
  (of-object "CcPixbuf")
  (c-name "cc_pixbuf_set_position_x")
  (return-type "none")
  (parameters
    '("gdouble" "pos_x")
  )
)

(define-method set_position_y
  (of-object "CcPixbuf")
  (c-name "cc_pixbuf_set_position_y")
  (return-type "none")
  (parameters
    '("gdouble" "pos_y")
  )
)

(define-method get_rotation
  (of-object "CcPixbuf")
  (c-name "cc_pixbuf_get_rotation")
  (return-type "gdouble")
)

(define-method set_rotation
  (of-object "CcPixbuf")
  (c-name "cc_pixbuf_set_rotation")
  (return-type "none")
  (parameters
    '("gdouble" "rotation")
  )
)



;; From ../ccc/cc-printer.h

(define-function printer_new
  (c-name "cc_printer_new")
  (is-constructor-of "CcPrinter")
  (return-type "CcPrinter*")
  (properties
    '("filename" (argname "filename"))
  )
)

(define-method print_page
  (of-object "CcPrinter")
  (c-name "cc_printer_print_page")
  (return-type "none")
)

;; From ../ccc/cc-radial-gradient.h

(define-function radial_gradient_new
  (in-module "Cc")
  (c-name "cc_radial_gradient_new")
  (is-constructor-of "CcRadialGradient")
  (return-type "CcBrush*")
  (properties
    '("x" (argname "x"))
    '("x" (argname "y"))
    '("x" (argname "radius"))
  )
)

;; From ../ccc/cc-rectangle.h

(define-function rectangle_new
  (c-name "cc_rectangle_new")
  (is-constructor-of "CcRectangle")
  (return-type "CcItem*")
)

(define-method set_position
  (of-object "CcRectangle")
  (c-name "cc_rectangle_set_position")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
    '("gdouble" "w")
    '("gdouble" "h")
  )
)

(define-method set_x
  (of-object "CcRectangle")
  (c-name "cc_rectangle_set_x")
  (return-type "none")
  (parameters
    '("gdouble" "x")
  )
)

(define-method set_y
  (of-object "CcRectangle")
  (c-name "cc_rectangle_set_y")
  (return-type "none")
  (parameters
    '("gdouble" "y")
  )
)

(define-method set_width
  (of-object "CcRectangle")
  (c-name "cc_rectangle_set_width")
  (return-type "none")
  (parameters
    '("gdouble" "width")
  )
)

(define-method set_height
  (of-object "CcRectangle")
  (c-name "cc_rectangle_set_height")
  (return-type "none")
  (parameters
    '("gdouble" "height")
  )
)



;; From ../ccc/cc-rounded-rectangle.h

(define-function rounded_rectangle_new
  (in-module "Cc")
  (c-name "cc_rounded_rectangle_new")
  (is-constructor-of "CcRoundedRectangle")
  (return-type "CcItem*")
)

(define-method set_radius
  (of-object "CcRoundedRectangle")
  (c-name "cc_rounded_rectangle_set_radius")
  (return-type "none")
  (parameters
    '("gdouble" "radius")
  )
)

;; From ../ccc/cc-shape.h

(define-method get_brush_border
  (of-object "CcShape")
  (c-name "cc_shape_get_brush_border")
  (return-type "CcBrush*")
)

(define-method set_brush_border
  (of-object "CcShape")
  (c-name "cc_shape_set_brush_border")
  (return-type "none")
  (parameters
    '("CcBrush*" "brush")
  )
)

(define-method get_brush_content
  (of-object "CcShape")
  (c-name "cc_shape_get_brush_content")
  (return-type "CcBrush*")
)

(define-method set_brush_content
  (of-object "CcShape")
  (c-name "cc_shape_set_brush_content")
  (return-type "none")
  (parameters
    '("CcBrush*" "brush")
  )
)

(define-method get_width
  (of-object "CcShape")
  (c-name "cc_shape_get_width")
  (return-type "gdouble")
  (parameters
    '("CcView*" "view")
  )
)

(define-method set_line_width
  (of-object "CcShape")
  (c-name "cc_shape_set_line_width")
  (return-type "none")
  (parameters
    '("CcDistance*" "width")
  )
)

(define-method set_width_pixels
  (of-object "CcShape")
  (c-name "cc_shape_set_width_pixels")
  (return-type "none")
  (parameters
    '("gdouble" "width")
  )
)

(define-method set_width_units
  (of-object "CcShape")
  (c-name "cc_shape_set_width_units")
  (return-type "none")
  (parameters
    '("gdouble" "width")
  )
)

;; From ../ccc/cc-text.h

(define-function text_new
  (in-module "Cc")
  (c-name "cc_text_new")
  (is-constructor-of "CcText")
  (return-type "CcItem*")
  (properties
    '("text" (argname "text"))
  )
)

(define-method is_editable
  (of-object "CcText")
  (c-name "cc_text_is_editable")
  (return-type "gboolean")
)

(define-method set_anchor
  (of-object "CcText")
  (c-name "cc_text_set_anchor")
  (return-type "none")
  (parameters
    '("gdouble" "x")
    '("gdouble" "y")
  )
)

(define-method set_anchor_type
  (of-object "CcText")
  (c-name "cc_text_set_anchor_type")
  (return-type "none")
  (parameters
    '("GtkAnchorType" "anchor")
  )
)

(define-method set_attributes
  (of-object "CcText")
  (c-name "cc_text_set_attributes")
  (return-type "none")
  (parameters
    '("PangoAttrList*" "attrs")
  )
)

(define-method set_editable
  (of-object "CcText")
  (c-name "cc_text_set_editable")
  (return-type "none")
  (parameters
    '("gboolean" "editable")
  )
)

(define-method set_font_description
  (of-object "CcText")
  (c-name "cc_text_set_font_description")
  (return-type "none")
  (parameters
    '("PangoFontDescription*" "desc")
  )
)

(define-method set_markup
  (of-object "CcText")
  (c-name "cc_text_set_markup")
  (return-type "none")
  (parameters
    '("gchar*" "markup")
  )
)

(define-method set_size_pixels
  (of-object "CcText")
  (c-name "cc_text_set_size_pixels")
  (return-type "none")
  (parameters
    '("gboolean" "size_pixels")
  )
)

(define-method set_text
  (of-object "CcText")
  (c-name "cc_text_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method get_text
  (of-object "CcText")
  (c-name "cc_text_get_text")
  (return-type "const-gchar*")
)

;; From ../ccc/cc-utils.h

(define-function accumulator_boolean
  (in-module "Cc")
  (c-name "cc_accumulator_boolean")
  (return-type "gboolean")
  (parameters
    '("GSignalInvocationHint*" "hint")
    '("GValue*" "return_accu")
    '("GValue*" "handler_return")
    '("gpointer" "data")
  )
)

(define-function point_grid_align
  (c-name "cc_point_grid_align")
  (return-type "none")
  (parameters
    '("gdouble*" "x")
    '("gdouble*" "y")
    '("gdouble*" "width")
  )
)

;; From ../ccc/cc-view-cell-renderer.h

(define-function view_cell_renderer_new
  (c-name "cc_view_cell_renderer_new")
  (is-constructor-of "CcViewCellRenderer")
  (return-type "GtkCellRenderer*")
)



;; From ../ccc/cc-view.h

(define-method get_focus
  (of-object "CcView")
  (c-name "cc_view_get_focus")
  (return-type "CcItem*")
)

(define-method get_root
  (of-object "CcView")
  (c-name "cc_view_get_root")
  (return-type "CcItem*")
)

(define-method get_scrolled_region
  (of-object "CcView")
  (c-name "cc_view_get_scrolled_region")
  (return-type "CcDRect*")
)

(define-method get_zoom
  (of-object "CcView")
  (c-name "cc_view_get_zoom")
  (return-type "gdouble")
)

(define-method set_focus
  (of-object "CcView")
  (c-name "cc_view_set_focus")
  (return-type "none")
  (parameters
    '("CcItem*" "focus")
  )
)

(define-method set_root
  (of-object "CcView")
  (c-name "cc_view_set_root")
  (return-type "none")
  (parameters
    '("CcItem*" "root")
  )
)

(define-method set_scrolled_region
  (of-object "CcView")
  (c-name "cc_view_set_scrolled_region")
  (return-type "none")
  (parameters
    '("CcDRect*" "scrolled_region" (null-ok))
  )
)

(define-method set_zoom
  (of-object "CcView")
  (c-name "cc_view_set_zoom")
  (return-type "none")
  (parameters
    '("gdouble" "zoom")
  )
)

(define-method grab_item
  (of-object "CcView")
  (c-name "cc_view_grab_item")
  (return-type "gint")
  (parameters
    '("CcItem*" "item")
    '("GdkEventMask" "mask")
    '("GdkCursor*" "cursor")
    '("guint32" "time")
  )
)

(define-method ungrab_item
  (of-object "CcView")
  (c-name "cc_view_ungrab_item")
  (return-type "none")
  (parameters
    '("CcItem*" "item")
    '("guint32" "time")
  )
)

(define-function view_window_to_world
  (c-name "cc_view_window_to_world")
  (return-type "none")
  (parameters
    '("CcView*" "self")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)

(define-function view_world_to_window
  (c-name "cc_view_world_to_window")
  (return-type "none")
  (parameters
    '("CcView*" "self")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)

(define-function view_world_to_window_distance
  (c-name "cc_view_world_to_window_distance")
  (return-type "none")
  (parameters
    '("CcView*" "self")
    '("gdouble*" "x")
    '("gdouble*" "y")
  )
)



;; From ../ccc/cc-view-png.h

(define-function view_png_new
  (in-module "Cc")
  (c-name "cc_view_png_new")
  (is-constructor-of "CcViewPng")
  (return-type "CcView*")
  (parameters
    '("gchar*" "filename")
  )
)



;; From ../ccc/cc-view-widget.h

(define-function view_widget_new
  (in-module "Cc")
  (c-name "cc_view_widget_new")
  (is-constructor-of "CcViewWidget")
  (return-type "GtkWidget*")
)

(define-function view_widget_new_root
  (in-module "Cc")
  (c-name "cc_view_widget_new_root")
  (return-type "GtkWidget*")
  (parameters
    '("CcItem*" "root" null-ok)
  )
)

(define-method get_center_view
  (of-object "CcViewWidget")
  (c-name "cc_view_widget_get_center_view")
  (return-type "gboolean")
)

(define-method set_center_view
  (of-object "CcViewWidget")
  (c-name "cc_view_widget_set_center_view")
  (return-type "none")
  (parameters
    '("gboolean" "center_view")
  )
)

(define-method get_zoom_mode
  (of-object "CcViewWidget")
  (c-name "cc_view_widget_get_zoom_mode")
  (return-type "CcZoomMode")
)

(define-method set_zoom_mode
  (of-object "CcViewWidget")
  (c-name "cc_view_widget_set_zoom_mode")
  (return-type "none")
  (parameters
    '("CcZoomMode" "zoom_mode")
  )
)

